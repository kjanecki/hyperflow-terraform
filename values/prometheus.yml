defaultRules:
  create: true
  rules:
    alertmanager: false
    etcd: false
    configReloaders: false
    general: true
    k8s: true
    kubeApiserver: true
    kubeApiserverAvailability: false
    kubeApiserverSlos: false
    kubelet: true
    kubeProxy: false
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeScheduler: false
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: false
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true

  appNamespacesTarget: ".*"

## Deprecated way to provide custom recording or alerting rules to be deployed into the cluster.
##
# additionalPrometheusRules: []
#  - name: my-rule-file
#    groups:
#      - name: my_group
#        rules:
#        - record: my_record
#          expr: 100 * my_record

global:
  rbac:
    create: true
    pspEnabled: false
    pspAnnotations: {}

alertmanager:
  enabled: false

grafana:
  enabled: true
  namespaceOverride: ""
  adminPassword: admin
  nodeSelector:
    node-role.kubernetes.io/hfmaster: hfmaster

kubeApiServer:
  enabled: true

kubelet:
  enabled: true

kubeControllerManager:
  enabled: false

coreDns:
  enabled: false

kubeDns:
  enabled: false

kubeEtcd:
  enabled: false

kubeScheduler:
  enabled: false

kubeProxy:
  enabled: false

kubeStateMetrics:
  enabled: true

kube-state-metrics:
  namespaceOverride: ""
  rbac:
    create: true
  releaseLabel: true
  prometheus:
    monitor:
      enabled: true
  nodeSelector:
    node-role.kubernetes.io/hfmaster: hfmaster

nodeExporter:
  enabled: true

prometheusOperator:
  enabled: true
  nodeSelector:
    node-role.kubernetes.io/hfmaster: hfmaster


prometheus:
  enabled: true
  prometheusSpec:
    scrapeInterval: 5s
    nodeSelector:
      node-role.kubernetes.io/hfmaster: hfmaster
    ruleSelectorNilUsesHelmValues: false
